// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using VRCZ.VRChatApi.Generated.Admin;
using VRCZ.VRChatApi.Generated.Analysis;
using VRCZ.VRChatApi.Generated.Auth;
using VRCZ.VRChatApi.Generated.Avatars;
using VRCZ.VRChatApi.Generated.Config;
using VRCZ.VRChatApi.Generated.Css;
using VRCZ.VRChatApi.Generated.Favorite;
using VRCZ.VRChatApi.Generated.Favorites;
using VRCZ.VRChatApi.Generated.FileNamespace;
using VRCZ.VRChatApi.Generated.Files;
using VRCZ.VRChatApi.Generated.Groups;
using VRCZ.VRChatApi.Generated.Health;
using VRCZ.VRChatApi.Generated.InfoPush;
using VRCZ.VRChatApi.Generated.Instances;
using VRCZ.VRChatApi.Generated.Invite;
using VRCZ.VRChatApi.Generated.Jams;
using VRCZ.VRChatApi.Generated.Js;
using VRCZ.VRChatApi.Generated.LicenseGroups;
using VRCZ.VRChatApi.Generated.Listing;
using VRCZ.VRChatApi.Generated.Logout;
using VRCZ.VRChatApi.Generated.Message;
using VRCZ.VRChatApi.Generated.Permissions;
using VRCZ.VRChatApi.Generated.Prints;
using VRCZ.VRChatApi.Generated.RequestInvite;
using VRCZ.VRChatApi.Generated.Steam;
using VRCZ.VRChatApi.Generated.Subscriptions;
using VRCZ.VRChatApi.Generated.Tilia;
using VRCZ.VRChatApi.Generated.Time;
using VRCZ.VRChatApi.Generated.TokenBundles;
using VRCZ.VRChatApi.Generated.User;
using VRCZ.VRChatApi.Generated.UserNotes;
using VRCZ.VRChatApi.Generated.Users;
using VRCZ.VRChatApi.Generated.Visits;
using VRCZ.VRChatApi.Generated.Worlds;
namespace VRCZ.VRChatApi.Generated
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class VRChatApiClient : BaseRequestBuilder
    {
        /// <summary>The Admin property</summary>
        public global::VRCZ.VRChatApi.Generated.Admin.AdminRequestBuilder Admin
        {
            get => new global::VRCZ.VRChatApi.Generated.Admin.AdminRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The analysis property</summary>
        public global::VRCZ.VRChatApi.Generated.Analysis.AnalysisRequestBuilder Analysis
        {
            get => new global::VRCZ.VRChatApi.Generated.Analysis.AnalysisRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The auth property</summary>
        public global::VRCZ.VRChatApi.Generated.Auth.AuthRequestBuilder Auth
        {
            get => new global::VRCZ.VRChatApi.Generated.Auth.AuthRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The avatars property</summary>
        public global::VRCZ.VRChatApi.Generated.Avatars.AvatarsRequestBuilder Avatars
        {
            get => new global::VRCZ.VRChatApi.Generated.Avatars.AvatarsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The config property</summary>
        public global::VRCZ.VRChatApi.Generated.Config.ConfigRequestBuilder Config
        {
            get => new global::VRCZ.VRChatApi.Generated.Config.ConfigRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The css property</summary>
        public global::VRCZ.VRChatApi.Generated.Css.CssRequestBuilder Css
        {
            get => new global::VRCZ.VRChatApi.Generated.Css.CssRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The favorite property</summary>
        public global::VRCZ.VRChatApi.Generated.Favorite.FavoriteRequestBuilder Favorite
        {
            get => new global::VRCZ.VRChatApi.Generated.Favorite.FavoriteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The favorites property</summary>
        public global::VRCZ.VRChatApi.Generated.Favorites.FavoritesRequestBuilder Favorites
        {
            get => new global::VRCZ.VRChatApi.Generated.Favorites.FavoritesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The file property</summary>
        public global::VRCZ.VRChatApi.Generated.FileNamespace.FileRequestBuilder File
        {
            get => new global::VRCZ.VRChatApi.Generated.FileNamespace.FileRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The files property</summary>
        public global::VRCZ.VRChatApi.Generated.Files.FilesRequestBuilder Files
        {
            get => new global::VRCZ.VRChatApi.Generated.Files.FilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The groups property</summary>
        public global::VRCZ.VRChatApi.Generated.Groups.GroupsRequestBuilder Groups
        {
            get => new global::VRCZ.VRChatApi.Generated.Groups.GroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The health property</summary>
        public global::VRCZ.VRChatApi.Generated.Health.HealthRequestBuilder Health
        {
            get => new global::VRCZ.VRChatApi.Generated.Health.HealthRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The infoPush property</summary>
        public global::VRCZ.VRChatApi.Generated.InfoPush.InfoPushRequestBuilder InfoPush
        {
            get => new global::VRCZ.VRChatApi.Generated.InfoPush.InfoPushRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The instances property</summary>
        public global::VRCZ.VRChatApi.Generated.Instances.InstancesRequestBuilder Instances
        {
            get => new global::VRCZ.VRChatApi.Generated.Instances.InstancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invite property</summary>
        public global::VRCZ.VRChatApi.Generated.Invite.InviteRequestBuilder Invite
        {
            get => new global::VRCZ.VRChatApi.Generated.Invite.InviteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The jams property</summary>
        public global::VRCZ.VRChatApi.Generated.Jams.JamsRequestBuilder Jams
        {
            get => new global::VRCZ.VRChatApi.Generated.Jams.JamsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The js property</summary>
        public global::VRCZ.VRChatApi.Generated.Js.JsRequestBuilder Js
        {
            get => new global::VRCZ.VRChatApi.Generated.Js.JsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The licenseGroups property</summary>
        public global::VRCZ.VRChatApi.Generated.LicenseGroups.LicenseGroupsRequestBuilder LicenseGroups
        {
            get => new global::VRCZ.VRChatApi.Generated.LicenseGroups.LicenseGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listing property</summary>
        public global::VRCZ.VRChatApi.Generated.Listing.ListingRequestBuilder Listing
        {
            get => new global::VRCZ.VRChatApi.Generated.Listing.ListingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The logout property</summary>
        public global::VRCZ.VRChatApi.Generated.Logout.LogoutRequestBuilder Logout
        {
            get => new global::VRCZ.VRChatApi.Generated.Logout.LogoutRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The message property</summary>
        public global::VRCZ.VRChatApi.Generated.Message.MessageRequestBuilder Message
        {
            get => new global::VRCZ.VRChatApi.Generated.Message.MessageRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The permissions property</summary>
        public global::VRCZ.VRChatApi.Generated.Permissions.PermissionsRequestBuilder Permissions
        {
            get => new global::VRCZ.VRChatApi.Generated.Permissions.PermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The prints property</summary>
        public global::VRCZ.VRChatApi.Generated.Prints.PrintsRequestBuilder Prints
        {
            get => new global::VRCZ.VRChatApi.Generated.Prints.PrintsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The requestInvite property</summary>
        public global::VRCZ.VRChatApi.Generated.RequestInvite.RequestInviteRequestBuilder RequestInvite
        {
            get => new global::VRCZ.VRChatApi.Generated.RequestInvite.RequestInviteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Steam property</summary>
        public global::VRCZ.VRChatApi.Generated.Steam.SteamRequestBuilder Steam
        {
            get => new global::VRCZ.VRChatApi.Generated.Steam.SteamRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subscriptions property</summary>
        public global::VRCZ.VRChatApi.Generated.Subscriptions.SubscriptionsRequestBuilder Subscriptions
        {
            get => new global::VRCZ.VRChatApi.Generated.Subscriptions.SubscriptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tilia property</summary>
        public global::VRCZ.VRChatApi.Generated.Tilia.TiliaRequestBuilder Tilia
        {
            get => new global::VRCZ.VRChatApi.Generated.Tilia.TiliaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The time property</summary>
        public global::VRCZ.VRChatApi.Generated.Time.TimeRequestBuilder Time
        {
            get => new global::VRCZ.VRChatApi.Generated.Time.TimeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tokenBundles property</summary>
        public global::VRCZ.VRChatApi.Generated.TokenBundles.TokenBundlesRequestBuilder TokenBundles
        {
            get => new global::VRCZ.VRChatApi.Generated.TokenBundles.TokenBundlesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The user property</summary>
        public global::VRCZ.VRChatApi.Generated.User.UserRequestBuilder User
        {
            get => new global::VRCZ.VRChatApi.Generated.User.UserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The userNotes property</summary>
        public global::VRCZ.VRChatApi.Generated.UserNotes.UserNotesRequestBuilder UserNotes
        {
            get => new global::VRCZ.VRChatApi.Generated.UserNotes.UserNotesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The users property</summary>
        public global::VRCZ.VRChatApi.Generated.Users.UsersRequestBuilder Users
        {
            get => new global::VRCZ.VRChatApi.Generated.Users.UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The visits property</summary>
        public global::VRCZ.VRChatApi.Generated.Visits.VisitsRequestBuilder Visits
        {
            get => new global::VRCZ.VRChatApi.Generated.Visits.VisitsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The worlds property</summary>
        public global::VRCZ.VRChatApi.Generated.Worlds.WorldsRequestBuilder Worlds
        {
            get => new global::VRCZ.VRChatApi.Generated.Worlds.WorldsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.VRChatApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public VRChatApiClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "https://api.vrchat.cloud/api/1";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
#pragma warning restore CS0618
