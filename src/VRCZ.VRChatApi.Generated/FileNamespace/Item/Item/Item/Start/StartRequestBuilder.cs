// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
using VRCZ.VRChatApi.Generated.Models;
namespace VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start
{
    /// <summary>
    /// Builds and executes requests for operations under \file\{fileId}\{versionId}\{fileType}\start
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class StartRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public StartRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/file/{fileId}/{versionId}/{fileType}/start{?partNumber*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public StartRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/file/{fileId}/{versionId}/{fileType}/start{?partNumber*}", rawUrl)
        {
        }
        /// <summary>
        /// Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS&apos;s REST documentation on &quot;PUT Object to S3&quot; on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.**Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.
        /// </summary>
        /// <returns>A <see cref="global::VRCZ.VRChatApi.Generated.Models.FileUploadURL"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::VRCZ.VRChatApi.Generated.Models.Error">When receiving a 400 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::VRCZ.VRChatApi.Generated.Models.FileUploadURL?> PutAsync(Action<RequestConfiguration<global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder.StartRequestBuilderPutQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::VRCZ.VRChatApi.Generated.Models.FileUploadURL> PutAsync(Action<RequestConfiguration<global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder.StartRequestBuilderPutQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToPutRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "400", global::VRCZ.VRChatApi.Generated.Models.Error.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::VRCZ.VRChatApi.Generated.Models.FileUploadURL>(requestInfo, global::VRCZ.VRChatApi.Generated.Models.FileUploadURL.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS&apos;s REST documentation on &quot;PUT Object to S3&quot; on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.**Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPutRequestInformation(Action<RequestConfiguration<global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder.StartRequestBuilderPutQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPutRequestInformation(Action<RequestConfiguration<global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder.StartRequestBuilderPutQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.PUT, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder WithUrl(string rawUrl)
        {
            return new global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS&apos;s REST documentation on &quot;PUT Object to S3&quot; on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.**Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class StartRequestBuilderPutQueryParameters 
        {
            /// <summary>The part number to start uploading. If not provided, the first part will be started.</summary>
            [Obsolete("")]
            [QueryParameter("partNumber")]
            public int? PartNumber { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class StartRequestBuilderPutRequestConfiguration : RequestConfiguration<global::VRCZ.VRChatApi.Generated.FileNamespace.Item.Item.Item.Start.StartRequestBuilder.StartRequestBuilderPutQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
