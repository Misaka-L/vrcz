// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace VRCZ.VRChatApi.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Avatar : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Not present from general serach `/avatars`, only on specific requests `/avatars/{avatarId}`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssetUrl { get; set; }
#nullable restore
#else
        public string AssetUrl { get; set; }
#endif
        /// <summary>Not present from general serach `/avatars`, only on specific requests `/avatars/{avatarId}`.**Deprecation:** `Object` has unknown usage/fields, and is always empty. Use normal `Url` field instead.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.Avatar_assetUrlObject? AssetUrlObject { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.Avatar_assetUrlObject AssetUrlObject { get; set; }
#endif
        /// <summary>A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorId { get; set; }
#nullable restore
#else
        public string AuthorId { get; set; }
#endif
        /// <summary>The authorName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorName { get; set; }
#nullable restore
#else
        public string AuthorName { get; set; }
#endif
        /// <summary>The created_at property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The featured property</summary>
        public bool? Featured { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The imageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The releaseStatus property</summary>
        public global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus? ReleaseStatus { get; set; }
        /// <summary>The styles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.Avatar_styles? Styles { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.Avatar_styles Styles { get; set; }
#endif
        /// <summary> </summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>The thumbnailImageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThumbnailImageUrl { get; set; }
#nullable restore
#else
        public string ThumbnailImageUrl { get; set; }
#endif
        /// <summary>The unityPackages property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::VRCZ.VRChatApi.Generated.Models.UnityPackage>? UnityPackages { get; set; }
#nullable restore
#else
        public List<global::VRCZ.VRChatApi.Generated.Models.UnityPackage> UnityPackages { get; set; }
#endif
        /// <summary>The unityPackageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UnityPackageUrl { get; set; }
#nullable restore
#else
        public string UnityPackageUrl { get; set; }
#endif
        /// <summary>**Deprecation:** `Object` has unknown usage/fields, and is always empty. Use normal `Url` field instead.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.Avatar_unityPackageUrlObject? UnityPackageUrlObject { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.Avatar_unityPackageUrlObject UnityPackageUrlObject { get; set; }
#endif
        /// <summary>The updated_at property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The version property</summary>
        public int? Version { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.Models.Avatar"/> and sets the default values.
        /// </summary>
        public Avatar()
        {
            AdditionalData = new Dictionary<string, object>();
            ReleaseStatus = global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus.Public;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::VRCZ.VRChatApi.Generated.Models.Avatar"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::VRCZ.VRChatApi.Generated.Models.Avatar CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::VRCZ.VRChatApi.Generated.Models.Avatar();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assetUrl", n => { AssetUrl = n.GetStringValue(); } },
                { "assetUrlObject", n => { AssetUrlObject = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.Avatar_assetUrlObject>(global::VRCZ.VRChatApi.Generated.Models.Avatar_assetUrlObject.CreateFromDiscriminatorValue); } },
                { "authorId", n => { AuthorId = n.GetStringValue(); } },
                { "authorName", n => { AuthorName = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "featured", n => { Featured = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "imageUrl", n => { ImageUrl = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "releaseStatus", n => { ReleaseStatus = n.GetEnumValue<global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus>(); } },
                { "styles", n => { Styles = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.Avatar_styles>(global::VRCZ.VRChatApi.Generated.Models.Avatar_styles.CreateFromDiscriminatorValue); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "thumbnailImageUrl", n => { ThumbnailImageUrl = n.GetStringValue(); } },
                { "unityPackageUrl", n => { UnityPackageUrl = n.GetStringValue(); } },
                { "unityPackageUrlObject", n => { UnityPackageUrlObject = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.Avatar_unityPackageUrlObject>(global::VRCZ.VRChatApi.Generated.Models.Avatar_unityPackageUrlObject.CreateFromDiscriminatorValue); } },
                { "unityPackages", n => { UnityPackages = n.GetCollectionOfObjectValues<global::VRCZ.VRChatApi.Generated.Models.UnityPackage>(global::VRCZ.VRChatApi.Generated.Models.UnityPackage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "version", n => { Version = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("assetUrl", AssetUrl);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.Avatar_assetUrlObject>("assetUrlObject", AssetUrlObject);
            writer.WriteStringValue("authorId", AuthorId);
            writer.WriteStringValue("authorName", AuthorName);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("featured", Featured);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("imageUrl", ImageUrl);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus>("releaseStatus", ReleaseStatus);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.Avatar_styles>("styles", Styles);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteStringValue("thumbnailImageUrl", ThumbnailImageUrl);
            writer.WriteCollectionOfObjectValues<global::VRCZ.VRChatApi.Generated.Models.UnityPackage>("unityPackages", UnityPackages);
            writer.WriteStringValue("unityPackageUrl", UnityPackageUrl);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.Avatar_unityPackageUrlObject>("unityPackageUrlObject", UnityPackageUrlObject);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteIntValue("version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
