// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace VRCZ.VRChatApi.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Jam : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The isVisible property</summary>
        public bool? IsVisible { get; set; }
        /// <summary>The moreInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MoreInfo { get; set; }
#nullable restore
#else
        public string MoreInfo { get; set; }
#endif
        /// <summary>One of:- submissions_open- closed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The stateChangeDates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.Jam_stateChangeDates? StateChangeDates { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.Jam_stateChangeDates StateChangeDates { get; set; }
#endif
        /// <summary>The submissionContentGated property</summary>
        public bool? SubmissionContentGated { get; set; }
        /// <summary>The submissionContentGateDate property</summary>
        public DateTimeOffset? SubmissionContentGateDate { get; set; }
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The updated_at property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.Models.Jam"/> and sets the default values.
        /// </summary>
        public Jam()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::VRCZ.VRChatApi.Generated.Models.Jam"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::VRCZ.VRChatApi.Generated.Models.Jam CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::VRCZ.VRChatApi.Generated.Models.Jam();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isVisible", n => { IsVisible = n.GetBoolValue(); } },
                { "moreInfo", n => { MoreInfo = n.GetStringValue(); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "stateChangeDates", n => { StateChangeDates = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.Jam_stateChangeDates>(global::VRCZ.VRChatApi.Generated.Models.Jam_stateChangeDates.CreateFromDiscriminatorValue); } },
                { "submissionContentGateDate", n => { SubmissionContentGateDate = n.GetDateTimeOffsetValue(); } },
                { "submissionContentGated", n => { SubmissionContentGated = n.GetBoolValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isVisible", IsVisible);
            writer.WriteStringValue("moreInfo", MoreInfo);
            writer.WriteStringValue("state", State);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.Jam_stateChangeDates>("stateChangeDates", StateChangeDates);
            writer.WriteBoolValue("submissionContentGated", SubmissionContentGated);
            writer.WriteDateTimeOffsetValue("submissionContentGateDate", SubmissionContentGateDate);
            writer.WriteStringValue("title", Title);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
