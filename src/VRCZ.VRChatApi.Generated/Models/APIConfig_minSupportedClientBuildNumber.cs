// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace VRCZ.VRChatApi.Generated.Models
{
    /// <summary>
    /// Minimum supported client build number for various platforms
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class APIConfig_minSupportedClientBuildNumber : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? AppStore { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo AppStore { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? Default { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo Default { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? Firebase { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo Firebase { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? FirebaseiOS { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo FirebaseiOS { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? GooglePlay { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo GooglePlay { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? PC { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo PC { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? PicoStore { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo PicoStore { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? QuestAppLab { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo QuestAppLab { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? QuestStore { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo QuestStore { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? TestFlight { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo TestFlight { get; set; }
#endif
        /// <summary>Build information for a platform</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo? XRElite { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo XRElite { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.Models.APIConfig_minSupportedClientBuildNumber"/> and sets the default values.
        /// </summary>
        public APIConfig_minSupportedClientBuildNumber()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::VRCZ.VRChatApi.Generated.Models.APIConfig_minSupportedClientBuildNumber"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::VRCZ.VRChatApi.Generated.Models.APIConfig_minSupportedClientBuildNumber CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::VRCZ.VRChatApi.Generated.Models.APIConfig_minSupportedClientBuildNumber();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AppStore", n => { AppStore = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "Default", n => { Default = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "Firebase", n => { Firebase = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "FirebaseiOS", n => { FirebaseiOS = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "GooglePlay", n => { GooglePlay = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "PC", n => { PC = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "PicoStore", n => { PicoStore = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "QuestAppLab", n => { QuestAppLab = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "QuestStore", n => { QuestStore = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "TestFlight", n => { TestFlight = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
                { "XRElite", n => { XRElite = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>(global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("AppStore", AppStore);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("Default", Default);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("Firebase", Firebase);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("FirebaseiOS", FirebaseiOS);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("GooglePlay", GooglePlay);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("PC", PC);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("PicoStore", PicoStore);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("QuestAppLab", QuestAppLab);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("QuestStore", QuestStore);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("TestFlight", TestFlight);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.PlatformBuildInfo>("XRElite", XRElite);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
