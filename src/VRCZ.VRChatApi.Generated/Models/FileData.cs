// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace VRCZ.VRChatApi.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class FileData : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The category property</summary>
        public global::VRCZ.VRChatApi.Generated.Models.FileData_category? Category { get; set; }
        /// <summary>The fileName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileName { get; set; }
#nullable restore
#else
        public string FileName { get; set; }
#endif
        /// <summary>The md5 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Md5 { get; set; }
#nullable restore
#else
        public string Md5 { get; set; }
#endif
        /// <summary>The sizeInBytes property</summary>
        public int? SizeInBytes { get; set; }
        /// <summary>The status property</summary>
        public global::VRCZ.VRChatApi.Generated.Models.FileStatus? Status { get; set; }
        /// <summary>The uploadId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadId { get; set; }
#nullable restore
#else
        public string UploadId { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.Models.FileData"/> and sets the default values.
        /// </summary>
        public FileData()
        {
            AdditionalData = new Dictionary<string, object>();
            Category = global::VRCZ.VRChatApi.Generated.Models.FileData_category.Queued;
            Status = global::VRCZ.VRChatApi.Generated.Models.FileStatus.Waiting;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::VRCZ.VRChatApi.Generated.Models.FileData"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::VRCZ.VRChatApi.Generated.Models.FileData CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::VRCZ.VRChatApi.Generated.Models.FileData();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "category", n => { Category = n.GetEnumValue<global::VRCZ.VRChatApi.Generated.Models.FileData_category>(); } },
                { "fileName", n => { FileName = n.GetStringValue(); } },
                { "md5", n => { Md5 = n.GetStringValue(); } },
                { "sizeInBytes", n => { SizeInBytes = n.GetIntValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::VRCZ.VRChatApi.Generated.Models.FileStatus>(); } },
                { "uploadId", n => { UploadId = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::VRCZ.VRChatApi.Generated.Models.FileData_category>("category", Category);
            writer.WriteStringValue("fileName", FileName);
            writer.WriteStringValue("md5", Md5);
            writer.WriteIntValue("sizeInBytes", SizeInBytes);
            writer.WriteEnumValue<global::VRCZ.VRChatApi.Generated.Models.FileStatus>("status", Status);
            writer.WriteStringValue("uploadId", UploadId);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
