// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace VRCZ.VRChatApi.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InfoPush : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::VRCZ.VRChatApi.Generated.Models.InfoPushData? Data { get; set; }
#nullable restore
#else
        public global::VRCZ.VRChatApi.Generated.Models.InfoPushData Data { get; set; }
#endif
        /// <summary>The endDate property</summary>
        public DateTimeOffset? EndDate { get; set; }
        /// <summary>Unknown usage, MD5</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Hash { get; set; }
#nullable restore
#else
        public string Hash { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The isEnabled property</summary>
        public bool? IsEnabled { get; set; }
        /// <summary>The priority property</summary>
        public int? Priority { get; set; }
        /// <summary>The releaseStatus property</summary>
        public global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus? ReleaseStatus { get; set; }
        /// <summary>The startDate property</summary>
        public DateTimeOffset? StartDate { get; set; }
        /// <summary> </summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>The updatedAt property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.Models.InfoPush"/> and sets the default values.
        /// </summary>
        public InfoPush()
        {
            AdditionalData = new Dictionary<string, object>();
            ReleaseStatus = global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus.Public;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::VRCZ.VRChatApi.Generated.Models.InfoPush"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::VRCZ.VRChatApi.Generated.Models.InfoPush CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::VRCZ.VRChatApi.Generated.Models.InfoPush();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "data", n => { Data = n.GetObjectValue<global::VRCZ.VRChatApi.Generated.Models.InfoPushData>(global::VRCZ.VRChatApi.Generated.Models.InfoPushData.CreateFromDiscriminatorValue); } },
                { "endDate", n => { EndDate = n.GetDateTimeOffsetValue(); } },
                { "hash", n => { Hash = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isEnabled", n => { IsEnabled = n.GetBoolValue(); } },
                { "priority", n => { Priority = n.GetIntValue(); } },
                { "releaseStatus", n => { ReleaseStatus = n.GetEnumValue<global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus>(); } },
                { "startDate", n => { StartDate = n.GetDateTimeOffsetValue(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteObjectValue<global::VRCZ.VRChatApi.Generated.Models.InfoPushData>("data", Data);
            writer.WriteDateTimeOffsetValue("endDate", EndDate);
            writer.WriteStringValue("hash", Hash);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isEnabled", IsEnabled);
            writer.WriteIntValue("priority", Priority);
            writer.WriteEnumValue<global::VRCZ.VRChatApi.Generated.Models.ReleaseStatus>("releaseStatus", ReleaseStatus);
            writer.WriteDateTimeOffsetValue("startDate", StartDate);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
