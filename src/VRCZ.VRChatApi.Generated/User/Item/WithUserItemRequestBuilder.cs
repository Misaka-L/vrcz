// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using VRCZ.VRChatApi.Generated.User.Item.Balance;
using VRCZ.VRChatApi.Generated.User.Item.FriendRequest;
using VRCZ.VRChatApi.Generated.User.Item.FriendStatus;
using VRCZ.VRChatApi.Generated.User.Item.Listings;
using VRCZ.VRChatApi.Generated.User.Item.Tilia;
namespace VRCZ.VRChatApi.Generated.User.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \user\{userId}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithUserItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The balance property</summary>
        public global::VRCZ.VRChatApi.Generated.User.Item.Balance.BalanceRequestBuilder Balance
        {
            get => new global::VRCZ.VRChatApi.Generated.User.Item.Balance.BalanceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The friendRequest property</summary>
        public global::VRCZ.VRChatApi.Generated.User.Item.FriendRequest.FriendRequestRequestBuilder FriendRequest
        {
            get => new global::VRCZ.VRChatApi.Generated.User.Item.FriendRequest.FriendRequestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The friendStatus property</summary>
        public global::VRCZ.VRChatApi.Generated.User.Item.FriendStatus.FriendStatusRequestBuilder FriendStatus
        {
            get => new global::VRCZ.VRChatApi.Generated.User.Item.FriendStatus.FriendStatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listings property</summary>
        public global::VRCZ.VRChatApi.Generated.User.Item.Listings.ListingsRequestBuilder Listings
        {
            get => new global::VRCZ.VRChatApi.Generated.User.Item.Listings.ListingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tilia property</summary>
        public global::VRCZ.VRChatApi.Generated.User.Item.Tilia.TiliaRequestBuilder Tilia
        {
            get => new global::VRCZ.VRChatApi.Generated.User.Item.Tilia.TiliaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.User.Item.WithUserItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithUserItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/user/{userId}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::VRCZ.VRChatApi.Generated.User.Item.WithUserItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithUserItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/user/{userId}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
